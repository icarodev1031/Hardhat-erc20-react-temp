/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Token, TokenInterface } from "../Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280600881526020017f58595a546f6b656e0000000000000000000000000000000000000000000000008152506000908051906020019061004f929190610143565b506040518060400160405280600381526020017f58595a00000000000000000000000000000000000000000000000000000000008152506001908051906020019061009b929190610143565b50692a5a058fc295ed0000006002553480156100b657600080fd5b50600254600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610247565b82805461014f906101e6565b90600052602060002090601f01602090048101928261017157600085556101b8565b82601f1061018a57805160ff19168380011785556101b8565b828001600101855582156101b8579182015b828111156101b757825182559160200191906001019061019c565b5b5090506101c591906101c9565b5090565b5b808211156101e25760008160009055506001016101ca565b5090565b600060028204905060018216806101fe57607f821691505b6020821081141561021257610211610218565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b610792806102566000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806306fdde031461006757806312514bba1461008557806318160ddd146100a157806370a08231146100bf5780638da5cb5b146100ef57806395d89b411461010d575b600080fd5b61006f61012b565b60405161007c919061051b565b60405180910390f35b61009f600480360381019061009a9190610440565b6101b9565b005b6100a96102ea565b6040516100b6919061055d565b60405180910390f35b6100d960048036038101906100d49190610417565b6102f0565b6040516100e6919061055d565b60405180910390f35b6100f7610339565b6040516101049190610500565b60405180910390f35b61011561035f565b604051610122919061051b565b60405180910390f35b600080546101389061068d565b80601f01602080910402602001604051908101604052809291908181526020018280546101649061068d565b80156101b15780601f10610186576101008083540402835291602001916101b1565b820191906000526020600020905b81548152906001019060200180831161019457829003601f168201915b505050505081565b80600460003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561023b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102329061053d565b60405180910390fd5b80600460003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461028a91906105ea565b9250508190555080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102e09190610594565b9250508190555050565b60025481565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001805461036c9061068d565b80601f01602080910402602001604051908101604052809291908181526020018280546103989061068d565b80156103e55780601f106103ba576101008083540402835291602001916103e5565b820191906000526020600020905b8154815290600101906020018083116103c857829003601f168201915b505050505081565b6000813590506103fc8161072e565b92915050565b60008135905061041181610745565b92915050565b60006020828403121561042957600080fd5b6000610437848285016103ed565b91505092915050565b60006020828403121561045257600080fd5b600061046084828501610402565b91505092915050565b6104728161061e565b82525050565b600061048382610578565b61048d8185610583565b935061049d81856020860161065a565b6104a68161071d565b840191505092915050565b60006104be601383610583565b91507f496e73756666696369656e7420616d6f756e74000000000000000000000000006000830152602082019050919050565b6104fa81610650565b82525050565b60006020820190506105156000830184610469565b92915050565b600060208201905081810360008301526105358184610478565b905092915050565b60006020820190508181036000830152610556816104b1565b9050919050565b600060208201905061057260008301846104f1565b92915050565b600081519050919050565b600082825260208201905092915050565b600061059f82610650565b91506105aa83610650565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156105df576105de6106bf565b5b828201905092915050565b60006105f582610650565b915061060083610650565b925082821015610613576106126106bf565b5b828203905092915050565b600061062982610630565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101561067857808201518184015260208101905061065d565b83811115610687576000848401525b50505050565b600060028204905060018216806106a557607f821691505b602082108114156106b9576106b86106ee565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b6107378161061e565b811461074257600080fd5b50565b61074e81610650565b811461075957600080fd5b5056fea26469706673582212207fe0a80fe706110da2bd4ac08337c1e5e4caa1c84d65b99a1d44ceb5599f0f2b64736f6c63430008000033";

export class Token__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Token> {
    return super.deploy(overrides || {}) as Promise<Token>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Token {
    return super.attach(address) as Token;
  }
  connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
