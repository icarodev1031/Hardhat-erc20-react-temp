/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { XYZToken, XYZTokenInterface } from "../XYZToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Send",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ADRLIST",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "available",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060c0016040528073f39fd6e51aad88f6f4ce6ab8827279cfffb9226673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001733c44cdddb6a900fa2b585dd299e03d12fa4293bc73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020017390f79bf6eb2c4f870365e785982e1f101e93b90673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001735b38da6a701c568545dcfcb03fcb875f56beddc473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200173ab8483f64d9c6d1ecf9b849ae677dd3315835cb273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001734b20993bc481177ec7e8f571cecae8a9e22c02db73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152506005906006620001c392919062000501565b50690a968163f0a57b400000600655348015620001df57600080fd5b506040518060400160405280600881526020017f58595a546f6b656e0000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f58595a000000000000000000000000000000000000000000000000000000000081525081600390805190602001906200026492919062000590565b5080600490805190602001906200027d92919062000590565b5050506200029430600654620002b260201b60201c565b620002ac6006546200042b60201b620009e91760201c565b620007ec565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000325576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200031c9062000678565b60405180910390fd5b6200033960008383620004ce60201b60201c565b80600260008282546200034d9190620006c8565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620003a49190620006c8565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200040b91906200069a565b60405180910390a36200042760008383620004d360201b60201c565b5050565b620004cb816040516024016200044291906200069a565b6040516020818303038152906040527ff5b1bba9000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050620004d860201b60201c565b50565b505050565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b8280548282559060005260206000209081019282156200057d579160200282015b828111156200057c5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019062000522565b5b5090506200058c919062000621565b5090565b8280546200059e906200072f565b90600052602060002090601f016020900481019282620005c257600085556200060e565b82601f10620005dd57805160ff19168380011785556200060e565b828001600101855582156200060e579182015b828111156200060d578251825591602001919060010190620005f0565b5b5090506200061d919062000621565b5090565b5b808211156200063c57600081600090555060010162000622565b5090565b60006200064f601f83620006b7565b91506200065c82620007c3565b602082019050919050565b620006728162000725565b82525050565b60006020820190508181036000830152620006938162000640565b9050919050565b6000602082019050620006b1600083018462000667565b92915050565b600082825260208201905092915050565b6000620006d58262000725565b9150620006e28362000725565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200071a576200071962000765565b5b828201905092915050565b6000819050919050565b600060028204905060018216806200074857607f821691505b602082108114156200075f576200075e62000794565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b611a0980620007fc6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806348a0d75411610097578063a52c101e11610066578063a52c101e146102d9578063a7ccc0ed146102f5578063a9059cbb14610313578063dd62ed3e1461034357610100565b806348a0d7541461023d57806370a082311461025b57806395d89b411461028b578063a457c2d7146102a957610100565b80631a064f5f116100d35780631a064f5f1461018f57806323b872dd146101bf578063313ce567146101ef578063395093511461020d57610100565b806306fdde0314610105578063095ea7b31461012357806312065fe01461015357806318160ddd14610171575b600080fd5b61010d610373565b60405161011a9190611348565b60405180910390f35b61013d60048036038101906101389190611088565b610405565b60405161014a919061132d565b60405180910390f35b61015b610428565b60405161016891906114aa565b60405180910390f35b61017961046f565b60405161018691906114aa565b60405180910390f35b6101a960048036038101906101a491906110ed565b610479565b6040516101b691906112e9565b60405180910390f35b6101d960048036038101906101d49190611039565b6104b8565b6040516101e6919061132d565b60405180910390f35b6101f76104e7565b60405161020491906114c5565b60405180910390f35b61022760048036038101906102229190611088565b6104f0565b604051610234919061132d565b60405180910390f35b610245610527565b60405161025291906114aa565b60405180910390f35b61027560048036038101906102709190610fd4565b610537565b60405161028291906114aa565b60405180910390f35b61029361057f565b6040516102a09190611348565b60405180910390f35b6102c360048036038101906102be9190611088565b610611565b6040516102d0919061132d565b60405180910390f35b6102f360048036038101906102ee91906110ed565b610688565b005b6102fd610939565b60405161030a91906114aa565b60405180910390f35b61032d60048036038101906103289190611088565b61093f565b60405161033a919061132d565b60405180910390f35b61035d60048036038101906103589190610ffd565b610962565b60405161036a91906114aa565b60405180910390f35b606060038054610382906115da565b80601f01602080910402602001604051908101604052809291908181526020018280546103ae906115da565b80156103fb5780601f106103d0576101008083540402835291602001916103fb565b820191906000526020600020905b8154815290600101906020018083116103de57829003601f168201915b5050505050905090565b600080610410610a82565b905061041d818585610a8a565b600191505092915050565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000600254905090565b6005818154811061048957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806104c3610a82565b90506104d0858285610c55565b6104db858585610ce1565b60019150509392505050565b60006012905090565b6000806104fb610a82565b905061051c81858561050d8589610962565b61051791906114fc565b610a8a565b600191505092915050565b600061053230610537565b905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461058e906115da565b80601f01602080910402602001604051908101604052809291908181526020018280546105ba906115da565b80156106075780601f106105dc57610100808354040283529160200191610607565b820191906000526020600020905b8154815290600101906020018083116105ea57829003601f168201915b5050505050905090565b60008061061c610a82565b9050600061062a8286610962565b90508381101561066f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106669061148a565b60405180910390fd5b61067c8286868403610a8a565b60019250505092915050565b6000805b60058054905081101561074957600581815481106106d3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561073657600191505b80806107419061160c565b91505061068c565b508061078a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610781906113ea565b60405180910390fd5b600082116107cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c49061146a565b60405180910390fd5b816107d730610537565b1015610818576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080f9061140a565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610853929190611304565b602060405180830381600087803b15801561086d57600080fd5b505af1158015610881573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a591906110c4565b5081600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108f591906114fc565b925050819055507f30a3c50752f2552dcc2b93f5b96866280816a986c0c0408cb6778b9fa198288f338360405161092d929190611304565b60405180910390a15050565b60065481565b60008061094a610a82565b9050610957818585610ce1565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610a7f816040516024016109fd91906114aa565b6040516020818303038152906040527ff5b1bba9000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f62565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610afa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af19061144a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b619061138a565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610c4891906114aa565b60405180910390a3505050565b6000610c618484610962565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610cdb5781811015610ccd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc4906113aa565b60405180910390fd5b610cda8484848403610a8a565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d489061142a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610dc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db89061136a565b60405180910390fd5b610dcc838383610f8b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e49906113ca565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ee591906114fc565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610f4991906114aa565b60405180910390a3610f5c848484610f90565b50505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b505050565b505050565b600081359050610fa48161198e565b92915050565b600081519050610fb9816119a5565b92915050565b600081359050610fce816119bc565b92915050565b600060208284031215610fe657600080fd5b6000610ff484828501610f95565b91505092915050565b6000806040838503121561101057600080fd5b600061101e85828601610f95565b925050602061102f85828601610f95565b9150509250929050565b60008060006060848603121561104e57600080fd5b600061105c86828701610f95565b935050602061106d86828701610f95565b925050604061107e86828701610fbf565b9150509250925092565b6000806040838503121561109b57600080fd5b60006110a985828601610f95565b92505060206110ba85828601610fbf565b9150509250929050565b6000602082840312156110d657600080fd5b60006110e484828501610faa565b91505092915050565b6000602082840312156110ff57600080fd5b600061110d84828501610fbf565b91505092915050565b61111f81611552565b82525050565b61112e81611564565b82525050565b600061113f826114e0565b61114981856114eb565b93506111598185602086016115a7565b611162816116b3565b840191505092915050565b600061117a6023836114eb565b9150611185826116c4565b604082019050919050565b600061119d6022836114eb565b91506111a882611713565b604082019050919050565b60006111c0601d836114eb565b91506111cb82611762565b602082019050919050565b60006111e36026836114eb565b91506111ee8261178b565b604082019050919050565b60006112066025836114eb565b9150611211826117da565b604082019050919050565b6000611229601a836114eb565b915061123482611829565b602082019050919050565b600061124c6025836114eb565b915061125782611852565b604082019050919050565b600061126f6024836114eb565b915061127a826118a1565b604082019050919050565b60006112926025836114eb565b915061129d826118f0565b604082019050919050565b60006112b56025836114eb565b91506112c08261193f565b604082019050919050565b6112d481611590565b82525050565b6112e38161159a565b82525050565b60006020820190506112fe6000830184611116565b92915050565b60006040820190506113196000830185611116565b61132660208301846112cb565b9392505050565b60006020820190506113426000830184611125565b92915050565b600060208201905081810360008301526113628184611134565b905092915050565b600060208201905081810360008301526113838161116d565b9050919050565b600060208201905081810360008301526113a381611190565b9050919050565b600060208201905081810360008301526113c3816111b3565b9050919050565b600060208201905081810360008301526113e3816111d6565b9050919050565b60006020820190508181036000830152611403816111f9565b9050919050565b600060208201905081810360008301526114238161121c565b9050919050565b600060208201905081810360008301526114438161123f565b9050919050565b6000602082019050818103600083015261146381611262565b9050919050565b6000602082019050818103600083015261148381611285565b9050919050565b600060208201905081810360008301526114a3816112a8565b9050919050565b60006020820190506114bf60008301846112cb565b92915050565b60006020820190506114da60008301846112da565b92915050565b600081519050919050565b600082825260208201905092915050565b600061150782611590565b915061151283611590565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561154757611546611655565b5b828201905092915050565b600061155d82611570565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156115c55780820151818401526020810190506115aa565b838111156115d4576000848401525b50505050565b600060028204905060018216806115f257607f821691505b6020821081141561160657611605611684565b5b50919050565b600061161782611590565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561164a57611649611655565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f596f752068617665206e6f742070726576696c65676520746f2073656e64207460008201527f6f6b656e73000000000000000000000000000000000000000000000000000000602082015250565b7f496e73756666696369656e7420746f6b656e20616d6f756e742e000000000000600082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f53656e6420616d6f756e74206d7573742062652067726561746572207468616e60008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61199781611552565b81146119a257600080fd5b50565b6119ae81611564565b81146119b957600080fd5b50565b6119c581611590565b81146119d057600080fd5b5056fea2646970667358221220e00b3e30c6984111d4563a83a5c7ce40dccbfd16f0423510dcefe9b590b0b6dd64736f6c63430008040033";

export class XYZToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<XYZToken> {
    return super.deploy(overrides || {}) as Promise<XYZToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): XYZToken {
    return super.attach(address) as XYZToken;
  }
  connect(signer: Signer): XYZToken__factory {
    return super.connect(signer) as XYZToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XYZTokenInterface {
    return new utils.Interface(_abi) as XYZTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): XYZToken {
    return new Contract(address, _abi, signerOrProvider) as XYZToken;
  }
}
