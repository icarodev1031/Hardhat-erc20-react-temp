/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Constant, ConstantInterface } from "../Constant";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ADRLIST",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060c0016040528073f39fd6e51aad88f6f4ce6ab8827279cfffb9226673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001733c44cdddb6a900fa2b585dd299e03d12fa4293bc73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020017390f79bf6eb2c4f870365e785982e1f101e93b90673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001735b38da6a701c568545dcfcb03fcb875f56beddc473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200173ab8483f64d9c6d1ecf9b849ae677dd3315835cb273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001734b20993bc481177ec7e8f571cecae8a9e22c02db73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525060009060066101c19291906101e2565b50690a968163f0a57b4000006001553480156101dc57600080fd5b50610289565b82805482825590600052602060002090810192821561025b579160200282015b8281111561025a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610202565b5b509050610268919061026c565b5090565b5b8082111561028557600081600090555060010161026d565b5090565b6101e9806102986000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631a064f5f1461003b578063a7ccc0ed1461006b575b600080fd5b610055600480360381019061005091906100e3565b610089565b604051610062919061012a565b60405180910390f35b6100736100c8565b6040516100809190610145565b60405180910390f35b6000818154811061009957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b6000813590506100dd8161019c565b92915050565b6000602082840312156100f557600080fd5b6000610103848285016100ce565b91505092915050565b61011581610160565b82525050565b61012481610192565b82525050565b600060208201905061013f600083018461010c565b92915050565b600060208201905061015a600083018461011b565b92915050565b600061016b82610172565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6101a581610192565b81146101b057600080fd5b5056fea264697066735822122040eeb156ac1d3c9a82058cbf8947c337f350ed84a7915587d38b5f7990f6bcee64736f6c63430008040033";

export class Constant__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Constant> {
    return super.deploy(overrides || {}) as Promise<Constant>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Constant {
    return super.attach(address) as Constant;
  }
  connect(signer: Signer): Constant__factory {
    return super.connect(signer) as Constant__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConstantInterface {
    return new utils.Interface(_abi) as ConstantInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Constant {
    return new Contract(address, _abi, signerOrProvider) as Constant;
  }
}
