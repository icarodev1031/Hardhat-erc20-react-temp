/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Main, MainInterface } from "../Main";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SendTokens",
    type: "event",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "sendTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516108413803806108418339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b600081519050610087816100e8565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100f1816100b6565b81146100fc57600080fd5b50565b6107338061010e6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806312065fe01461003b578063f5c6ca0814610059575b600080fd5b610043610075565b604051610050919061055b565b60405180910390f35b610073600480360381019061006e91906103de565b6100bc565b005b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600081116100ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f69061053b565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161015b91906104b7565b60206040518083038186803b15801561017357600080fd5b505afa158015610187573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ab9190610407565b9050818110156101f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e79061051b565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b815260040161024e9291906104d2565b602060405180830381600087803b15801561026857600080fd5b505af115801561027c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a091906103b5565b9050806102e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d9906104fb565b60405180910390fd5b82600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103319190610587565b925050819055507f09bd3894cb7ab22415416dac0fecc519855a4b0842f1c9115e562ef557ab577b33846040516103699291906104d2565b60405180910390a1505050565b600081519050610385816106cf565b92915050565b60008135905061039a816106e6565b92915050565b6000815190506103af816106e6565b92915050565b6000602082840312156103c757600080fd5b60006103d584828501610376565b91505092915050565b6000602082840312156103f057600080fd5b60006103fe8482850161038b565b91505092915050565b60006020828403121561041957600080fd5b6000610427848285016103a0565b91505092915050565b610439816105dd565b82525050565b600061044c602083610576565b915061045782610654565b602082019050919050565b600061046f601383610576565b915061047a8261067d565b602082019050919050565b6000610492601c83610576565b915061049d826106a6565b602082019050919050565b6104b18161061b565b82525050565b60006020820190506104cc6000830184610430565b92915050565b60006040820190506104e76000830185610430565b6104f460208301846104a8565b9392505050565b600060208201905081810360008301526105148161043f565b9050919050565b6000602082019050818103600083015261053481610462565b9050919050565b6000602082019050818103600083015261055481610485565b9050919050565b600060208201905061057060008301846104a8565b92915050565b600082825260208201905092915050565b60006105928261061b565b915061059d8361061b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156105d2576105d1610625565b5b828201905092915050565b60006105e8826105fb565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4661696c656420746f207472616e7366657220746f6b656e20746f2075736572600082015250565b7f496e73756666696369656e7420746f6b656e7300000000000000000000000000600082015250565b7f506c656173652073656c65637420636f727265637420616d6f756e7400000000600082015250565b6106d8816105ef565b81146106e357600080fd5b50565b6106ef8161061b565b81146106fa57600080fd5b5056fea26469706673582212208957ef2632131aef20813baa3f8e59f7c768f6d7105146247c7a7f45bdf275cb64736f6c63430008040033";

export class Main__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    tokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Main> {
    return super.deploy(tokenAddress, overrides || {}) as Promise<Main>;
  }
  getDeployTransaction(
    tokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tokenAddress, overrides || {});
  }
  attach(address: string): Main {
    return super.attach(address) as Main;
  }
  connect(signer: Signer): Main__factory {
    return super.connect(signer) as Main__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MainInterface {
    return new utils.Interface(_abi) as MainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Main {
    return new Contract(address, _abi, signerOrProvider) as Main;
  }
}
